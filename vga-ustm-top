module vga_ustm_top(
    input  wire        sys_clk,        
    input  wire        sys_rst_n,     
    output wire        hsync,        
    output wire        vsync,          
    output wire [4:0]  red,            
    output wire [5:0]  green,          
    output wire [4:0]  blue            
);


wire                pix_clk;        
wire                pll_locked;     
wire                valid;           
wire [9:0]          h_cnt;         
wire [9:0]          v_cnt;          
wire                pixel_data;      
wire [15:0]         rgb_16bit;       


pll u_pll_25mhz(
    .inclk0  (sys_clk),
    .c0      (pix_clk),
    .locked  (pll_locked)
);


vga_timing u_vga_timing(
    .pix_clk  (pix_clk),
    .rst_n    (sys_rst_n & pll_locked),
    .hsync    (hsync),
    .vsync    (vsync),
    .valid    (valid),
    .h_cnt    (h_cnt),
    .v_cnt    (v_cnt)
);


char_generator u_char_generator(
    .pix_clk    (pix_clk),
    .rst_n      (sys_rst_n),
    .valid      (valid),
    .h_cnt      (h_cnt),
    .v_cnt      (v_cnt),
    .pixel_data (pixel_data)
);


localparam BLACK    = 16'h0000;  
localparam RED      = 16'hF800;   
localparam GREEN    = 16'h07E0;   
localparam BLUE     = 16'h001F;   
localparam YELLOW   = 16'hFFE0;   
localparam CYAN     = 16'h07FF;   
localparam MAGENTA  = 16'hF81F;   
localparam WHITE    = 16'hFFFF;  


reg [15:0] char_color;
always @(*) begin
    if(!valid) begin
        char_color = BLACK;
    end else begin
       
        if(h_cnt >= 280 && h_cnt < 288)     
            char_color = RED;
        else if(h_cnt >= 290 && h_cnt < 298)  
            char_color = GREEN;
        else if(h_cnt >= 299 && h_cnt < 307)  
            char_color = BLUE;
        else if(h_cnt >= 308 && h_cnt < 318) 
            char_color = YELLOW;
        else
            char_color = BLACK;  
    end
end


assign rgb_16bit = (valid && pixel_data) ? char_color : BLACK;


assign red   = rgb_16bit[15:11];  
assign green = rgb_16bit[10:5];   
assign blue  = rgb_16bit[4:0];    

endmodule
